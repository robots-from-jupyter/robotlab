{% set name = "strict-rfc3339" %}
{% set version = "0.7" %}
{% set sha256 = "5cad17bedfc3af57b399db0fed32771f18fc54bbd917e85546088607ac5e1277" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 1
  script: python -m pip install --no-deps --ignore-installed .

requirements:
  host:
    - pip
    - python
  run:
    - python

test:
  imports:
    - strict_rfc3339

about:
  home: http://www.danielrichman.co.uk/libraries/strict-rfc3339.html
  license: GPL-3.0
  license_family: GPL
  license_file: LICENSE
  summary: 'Strict, simple, lightweight RFC3339 functions'
  description: |
    strict-rfc3339 is a simple & light python module to validate, parse and
    generate RFC3339 time strings. It was initially created as a part of
    habitat in response to difficulty using other libraries.

    It can convert UNIX timestamps to and from RFC3339, either producing
    strings with a UTC offset (Z) or with the offset that the C time module
    reports is the local timezone offset. It has minimal dependencies (none
    beyond those that come with Python) and avoids the error-prone act of
    dealing with timezones as much as possible. Besides that, it's designed to
    be strict and stick closely to RFC3339, with a couple of very small
    caveats. It's also fully unit tested.
  doc_url: https://github.com/danielrichman/strict-rfc3339/blob/master/README.md
  dev_url: https://github.com/danielrichman/strict-rfc3339

extra:
  recipe-maintainers:
    - kynan
